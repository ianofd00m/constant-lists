async function w(t){var e,o,c;if(!t||!t.trim())throw new Error("DEK content is empty");try{const d=new DOMParser().parseFromString(t,"text/xml");if(d.querySelector("parsererror"))throw new Error("Invalid XML format");const s=d.querySelector("Deck");if(!s)throw new Error("No Deck element found in XML");const l=((e=s.querySelector("Name"))==null?void 0:e.textContent)||"Imported Deck",f=((o=s.querySelector("NetDeckID"))==null?void 0:o.textContent)||"0",m=((c=s.querySelector("PreconstructedDeckID"))==null?void 0:c.textContent)||"0",u=s.querySelectorAll("Cards");if(u.length===0)throw new Error("No cards found in deck");const i=[];if(u.forEach(r=>{const n=D(r);n&&i.push(n)}),i.length===0)throw new Error("No valid cards found in deck");return{cards:i,metadata:{deckName:l,netDeckID:f,preconstructedDeckID:m,totalCards:i.reduce((r,n)=>r+n.quantity,0),mainboardCount:i.filter(r=>!r.sideboard).reduce((r,n)=>r+n.quantity,0),sideboardCount:i.filter(r=>r.sideboard).reduce((r,n)=>r+n.quantity,0)}}}catch(a){throw console.error("Error parsing DEK file:",a),new Error(`Failed to parse DEK file: ${a.message}`)}}function D(t){try{const e=t.getAttribute("CatID"),o=parseInt(t.getAttribute("Quantity"),10),c=t.getAttribute("Sideboard")==="true",a=t.getAttribute("Name");return!a||isNaN(o)||o<=0?(console.warn("Invalid card element:",t),null):{id:p(a,e),name:a.trim(),quantity:o,sideboard:c,catID:e,set:"",set_name:"",foil:!1,condition:"NM",language:"EN",dateAdded:new Date().toISOString(),source:"dek_import"}}catch(e){return console.warn("Error parsing card element:",e),null}}function p(t,e=""){return[t.replace(/[^a-zA-Z0-9]/g,"").toLowerCase(),e||"unknown","dek"].join("-")+"-"+Date.now()+"-"+Math.random().toString(36).substring(7)}function y(t){if(!t||!t.cards)throw new Error("Invalid DEK result");return t.cards.map(e=>({id:e.id,name:e.name,quantity:e.quantity,set:e.set||"",set_name:e.set_name||"",foil:e.foil||!1,condition:e.condition||"NM",language:e.language||"EN",sideboard:e.sideboard||!1,catID:e.catID,dateAdded:e.dateAdded,source:"dek_import"}))}export{y as convertDekToCollection,w as parseDek};
